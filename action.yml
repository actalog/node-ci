name: '@actalog/node-ci'
description: 'CI pipeline for Node.js: setup, conditional scripts, SonarCloud, artifacts, and PR reports.'
author: Gabriel Rufino <contato@gabrielrufino.com>
branding:
  icon: refresh-ccw
  color: green

inputs:
  except:
    required: false
    default: ''
  github-token:
    required: false
  node-version:
    required: false
    default: 24
  sonar-token:
    required: false

runs:
  using: 'composite'
  steps:
    - uses: actions/setup-node@v5
      with:
        node-version: ${{ inputs.node-version }}
        cache: 'npm'
    - id: scripts
      run: |
        scripts=$(cat package.json | jq -c '.scripts | keys')
        echo "scripts=$scripts" >> $GITHUB_OUTPUT
      shell: bash
    - run: npm ci || npm install
      shell: bash
    - id: build
      if: ${{ contains(steps.scripts.outputs.scripts, 'build') && !contains(inputs.except, 'build') }}
      run: npm run build
      shell: bash
    - id: lint
      if: ${{ contains(steps.scripts.outputs.scripts, 'lint') && !contains(inputs.except, 'lint') }}
      run: npm run lint
      shell: bash
    - id: test
      if: ${{ contains(steps.scripts.outputs.scripts, 'test') && !contains(inputs.except, 'test') }}
      run: npm test
      shell: bash
    - run: npm run test:e2e
      if: ${{ contains(steps.scripts.outputs.scripts, 'test:e2e') && !contains(inputs.except, 'test:e2e') }}
      shell: bash
    - run: npm run test:cov
      if: ${{ contains(steps.scripts.outputs.scripts, 'test:cov') && !contains(inputs.except, 'test') }}
      shell: bash
    - if: ${{ inputs.sonar-token && inputs.github-token }}
      uses: SonarSource/sonarcloud-github-action@master
      continue-on-error: true
      env:
        SONAR_TOKEN: ${{ inputs.sonar-token }}
        GITHUB_TOKEN: ${{ inputs.github-token }}
    - uses: actions/upload-artifact@v4
      with:
        name: node-ci
        path: |
          dist
          coverage
        if-no-files-found: ignore
      continue-on-error: true
    - if: ${{ always() && github.event_name == 'pull_request' }}
      id: info
      run: |
        size=$(du -sh node_modules | cut -f1)
        echo "size=$size" >> $GITHUB_OUTPUT

        {
          echo 'outdated<<EOF'
          echo "$(npm outdated)"
          echo 'EOF'
        } >> $GITHUB_OUTPUT
      shell: bash
      continue-on-error: true
    - if: ${{ always() && github.event_name == 'pull_request' }}
      uses: peter-evans/create-or-update-comment@v4
      with:
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          # @actalog/node-ci

          Node CI completed!

          ## Steps

          | Step      | Status                     |
          | --------- | -------------------------- |
          | **Build** | ${{ steps.build.outcome }} |
          | **Lint**  | ${{ steps.lint.outcome }}  |
          | **Test**  | ${{ steps.test.outcome }}  |

          ## Statistics

          * **node_modules size:** ${{ steps.info.outputs.size }}

          ## Outdated packages

          ```
          ${{ steps.info.outputs.outdated || 'No outdated packages' }}
          ```

          ## Environment

          * **Runner OS:** ${{ runner.os }}
          * **Runner Arch:** ${{ runner.arch }}
          * **Node version:** ${{ inputs.node-version }}
      continue-on-error: true
